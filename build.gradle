buildscript {
    ext.kotlinVersion = '1.3.0-rc-190'
    ext.junitPlatformVersion = "1.0.0"
    ext.assertjVersion = "3.8.0"
}

plugins {
    id 'kotlin-multiplatform' version '1.3.0-rc-190'
}

repositories {
    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
}

group 'com.pajato.argus'
version '0.0.1'

apply plugin: 'jacoco'
apply plugin: 'maven-publish'

jacoco {
    toolVersion = "0.8.2"
}

task jacocoJVMTestReport(type: JacocoReport) {
    //dependsOn = test
    group = "Reporting"
    description = "Generate Jacoco coverage report."
    classDirectories = fileTree(dir: "$buildDir/classes/kotlin/jvm/main")
    def coverageSourceDirs = ["src/commonMain/kotlin", "src/jvmMain/kotlin"]
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/jacoco/jvmTest.exec")
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.js, 'js')
        // For ARM, preset should be changed to presets.iosArm32 or presets.iosArm64
        // For Linux, preset should be changed to e.g. presets.linuxX64
        // For MacOS, preset should be changed to e.g. presets.macosX64
        fromPreset(presets.macosX64, 'macos')
    }
    sourceSets {
    commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }
        jsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
        macosMain {
        }
        macosTest {
        }
    }
}
